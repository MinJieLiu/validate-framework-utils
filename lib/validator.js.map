{"version":3,"sources":["../src/Validator.js"],"names":["Validator","Object","assign","name","method","field","call"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;;;AAEA;;;IAGqBA,S;AAEnB,uBAAc;AAAA;;AACZ;AACAC,WAAOC,MAAP,CAAc,IAAd;AAGD;;AAED;;;;;;;;;;8BAMUC,I,EAAMC,M,EAAQ;AACtB,UAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AAChC,aAAKD,IAAL,IAAaC,MAAb;AACD;AACD,aAAO,IAAP;AACD;;AAED;;;;;;;;iCAKaD,I,EAAM;AACjB,aAAO,KAAKA,IAAL,CAAP;AACA,aAAO,IAAP;AACD;;AAED;;;;;;;;oCAKgBE,K,EAAO;AACrB,aAAO,eAAgBC,IAAhB,CAAqB,IAArB,EAA2BD,KAA3B,CAAP;AACD;;;;;;kBAvCkBL,S","file":"Validator.js","sourcesContent":["import testHook from './testHook';\nimport validateByField from './core';\n\n/**\n * 验证组件\n */\nexport default class Validator {\n\n  constructor() {\n    // 绑定验证基本验证方法\n    Object.assign(this, {\n      ...testHook,\n    });\n  }\n\n  /**\n   * 添加验证方法\n   * @param name\n   * @param method\n   * @return {Validator}\n   */\n  addMethod(name, method) {\n    if (typeof method === 'function') {\n      this[name] = method;\n    }\n    return this;\n  }\n\n  /**\n   * 移除验证方法\n   * @param name\n   * @return {Validator}\n   */\n  removeMethod(name) {\n    delete this[name];\n    return this;\n  }\n\n  /**\n   * 通过 field 验证\n   * @param  {Object} field 验证信息域\n   * @return {Object} 包含结果、错误信息\n   */\n  validateByField(field) {\n    return validateByField.call(this, field);\n  }\n}\n"]}