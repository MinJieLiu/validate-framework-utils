{"version":3,"sources":["../src/Validator.js"],"names":["Validator","Object","assign","methods","names","forEach","name","field","call"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;;;AAEA;;;IAGqBA,S;AAEnB,uBAAc;AAAA;;AACZ;AACAC,WAAOC,MAAP,CAAc,IAAd;AAGD;;AAED;;;;;;;;;+BAKWC,O,EAAS;AAClBF,aAAOC,MAAP,CAAc,IAAd,EAAoBC,OAApB;AACA,aAAO,IAAP;AACD;;AAED;;;;;;;;oCAKwB;AAAA;;AAAA,wCAAPC,KAAO;AAAPA,aAAO;AAAA;;AACtBA,YAAMC,OAAN,CAAc;AAAA,eAAQ,OAAO,MAAKC,IAAL,CAAf;AAAA,OAAd;AACA,aAAO,IAAP;AACD;;AAED;;;;;;;;kCAKcC,K,EAAO;AACnB,aAAO,eAAcC,IAAd,CAAmB,IAAnB,EAAyBD,KAAzB,CAAP;AACD;;;;;;kBApCkBP,S","file":"Validator.js","sourcesContent":["import testHook from './testHook';\nimport validateField from './core';\n\n/**\n * 验证组件\n */\nexport default class Validator {\n\n  constructor() {\n    // 绑定验证基本验证方法\n    Object.assign(this, {\n      ...testHook,\n    });\n  }\n\n  /**\n   * 添加验证方法\n   * @param methods\n   * @return {Validator}\n   */\n  addMethods(methods) {\n    Object.assign(this, methods);\n    return this;\n  }\n\n  /**\n   * 移除验证方法\n   * @param names\n   * @return {Validator}\n   */\n  removeMethods(...names) {\n    names.forEach(name => delete this[name]);\n    return this;\n  }\n\n  /**\n   * 通过 field 验证\n   * @param  {Object} field - 验证信息域\n   * @return {Function} [Promise] - 包含结果、错误信息\n   */\n  validateField(field) {\n    return validateField.call(this, field);\n  }\n}\n"]}