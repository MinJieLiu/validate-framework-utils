{"version":3,"sources":["../src/Validator.js"],"names":["Validator","methods","names","forEach","name","field","call"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;;;AAEA;;;IAGqBA,S;AAEnB,uBAAc;AAAA;;AACZ;AACA,aAAc,IAAd;AAGA,WAAO,IAAP;AACD;;AAED;;;;;;;;;+BAKWC,O,EAAS;AAClB,eAAc,IAAd,EAAoBA,OAApB;AACA,aAAO,IAAP;AACD;;AAED;;;;;;;;oCAKwB;AAAA;;AAAA,wCAAPC,KAAO;AAAPA,aAAO;AAAA;;AACtBA,YAAMC,OAAN,CAAc;AAAA,eAAQ,OAAO,MAAKC,IAAL,CAAf;AAAA,OAAd;AACA,aAAO,IAAP;AACD;;AAED;;;;;;;;oCAKgBC,K,EAAO;AACrB,aAAO,eAAgBC,IAAhB,CAAqB,IAArB,EAA2BD,KAA3B,CAAP;AACD;;;;;;kBArCkBL,S","file":"Validator.js","sourcesContent":["import testHook from './testHook';\nimport validateByField from './core';\n\n/**\n * 验证组件\n */\nexport default class Validator {\n\n  constructor() {\n    // 绑定验证基本验证方法\n    Object.assign(this, {\n      ...testHook,\n    });\n    return this;\n  }\n\n  /**\n   * 添加验证方法\n   * @param methods\n   * @return {Validator}\n   */\n  addMethods(methods) {\n    Object.assign(this, methods);\n    return this;\n  }\n\n  /**\n   * 移除验证方法\n   * @param names\n   * @return {Validator}\n   */\n  removeMethods(...names) {\n    names.forEach(name => delete this[name]);\n    return this;\n  }\n\n  /**\n   * 通过 field 验证\n   * @param  {Object} field 验证信息域\n   * @return {Object} 包含结果、错误信息\n   */\n  validateByField(field) {\n    return validateByField.call(this, field);\n  }\n}\n"]}